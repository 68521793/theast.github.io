
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
 <channel>
   <title>Theast&#39;s Note</title>
   <link>https://68521793.github.io/theast.github.io/</link>
   <description>Recent content on Theast&#39;s Note</description>
   <generator>Hugo -- gohugo.io</generator>
   <language>en-us</language>
   <lastBuildDate>Fri, 22 Nov 2019 09:54:47 +0100</lastBuildDate>
   
       <atom:link href="https://68521793.github.io/theast.github.io/index.xml" rel="self" type="application/rss+xml" />
   
   
     <item>
       <title>CARLA UE4 compile and build in linux</title>
       <link>https://68521793.github.io/theast.github.io/posts/carla_unreal4_compile_in_linux/</link>
       <pubDate>Fri, 22 Nov 2019 09:54:47 +0100</pubDate>
       
       <guid>https://68521793.github.io/theast.github.io/posts/carla_unreal4_compile_in_linux/</guid>
       <description>

&lt;h3 id=&#34;prepare-building-environment&#34;&gt;Prepare Building Environment&lt;/h3&gt;

&lt;p&gt;The first step is to prepare the building environment, dependency and enable clang 6.0 and LLVM&amp;rsquo;s libc++. The following commands are served as reference, please refer to the original &lt;a href=&#34;https://carla.readthedocs.io/en/latest/how_to_build_on_linux/&#34;&gt;carla document&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update
sudo apt-get install wget software-properties-common
sudo add-apt-repository ppa:ubuntu-toolchain-r/test
wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
sudo apt-add-repository &amp;quot;deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-7 main&amp;quot;
sudo apt-get update
sudo apt-get install build-essential clang-7 lld-7 g++-7 cmake ninja-build libvulkan1 python python-pip python-dev python3-dev python3-pip libpng-dev libtiff5-dev libjpeg-dev tzdata sed curl unzip autoconf libtool rsync
pip3 install --user setuptools

sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/lib/llvm-7/bin/clang++ 170
sudo update-alternatives --install /usr/bin/clang clang /usr/lib/llvm-7/bin/clang 170
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;build-unreal-engine&#34;&gt;Build Unreal Engine&lt;/h3&gt;

&lt;p&gt;The next step is to compile and build the unreal engine on the local machine, get clone from UE4 github repository then go the folder and run&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone --depth=1 -b 4.22 https://github.com/EpicGames/UnrealEngine.git ~/UnrealEngine_4.22
cd ~/UnrealEngine_4.22
./Setup.sh &amp;amp;&amp;amp; ./GenerateProjectFiles.sh &amp;amp;&amp;amp; make
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note: It must be the version 4.22, otherwise you could get Carla build error sometime later @make launch phase.&lt;/p&gt;

&lt;h3 id=&#34;build-carla&#34;&gt;Build CARLA&lt;/h3&gt;

&lt;p&gt;to build carla we need to clone carla first, it&amp;rsquo;s preferred to use the stable brache. By executing ./Update.sh it will download the asset packages, which takes approx. 6.8 GBytes.&lt;/p&gt;

&lt;p&gt;In order to find the Unreal Engine&amp;rsquo;s folder we need to define the environment variable UE4_ROOT for carla, e.g. in .bashrc. After setting up the enviroment label we could compile the simulator and launch Unreal Engine Editor.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/carla-simulator/carla.git
sudo apt-get install aria2
cd carla
export UE4_ROOT=~/UnrealEngine_4.22
./Update.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It shall be noted that UE4 requires vulkan driver by default, if you want to use opengl, it&amp;rsquo;s easy by setting:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;1. Go to ~/carla/Util/BuildTools/BuildCarlaUE4.sh
2. Open it and change RHI=&amp;quot;-vulkan&amp;quot; to RHI=&amp;quot;-opengl&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install vulkan as reference using below commands:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dpkg --add-architecture i386 #enable 32bit architecture
sudo apt-get install libvulkan1 libvulkan1:i386 mesa-vulkan-drivers mesa-vulkan-drivers:i386
lspci | grep VGA #check which GPU you have in system
#install GPU driver
#...
reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install Nvidia driver in Ubuntu is a little tricky. First, we need to download the latest driver from Nvidia webpage, then install the driver without X server. following bash commands are for reference.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Ctrl + Alt + F2 go to console login
chmod +x ./your-nvidia-file.run
sudo ./NVIDIA-Linux_x86_64-440.36.run#in my case NVIDIA-Linux_x86_64-440.36.run
reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After reboot, using nvidia-smi to check the driver version.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/68521793/wordpress_blog/raw/master/driver_version.png&#34; alt=&#34;Nvidia_Driver&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Finally, we can use &amp;ldquo;make&amp;rdquo; to run different commands and build the different modules, like&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make launch     # Compiles the simulator and launches Unreal Engine&#39;s Editor.
make PythonAPI  # Compiles the PythonAPI module necessary for running the Python examples.
make package    # Compiles everything and creates a packaged version able to run without UE4 editor.
make help       # Print all available commands.
&lt;/code&gt;&lt;/pre&gt;
</description>
     </item>
   
 </channel>
</rss>
